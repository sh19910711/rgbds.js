function ${FUNCTION_NAME}(options, callback) {
  var Module = {}

  Object.assign(Module, options)

  Object.assign(Module, {
    canvas: document.createElement('canvas'),
    callback: callback,
    arguments: ['-ooutput', Module.entry],

    preRun: _=> {
      Object.keys(Module.files).forEach(function(filename) {
        createProjectFile(filename)
      })
    },

    postRun: _=> {
      console.log('OUTPUT', FS.readFile('/output').slice(0, 100))
      const output = 'output'
      const length = FS.stat(output).size
      const stream = FS.open(output, 'r')
      const buf = new Uint8Array(length)
      FS.read(stream, buf, 0, length)
      FS.close(stream)
      callback(buf)
    },
  })

  if (options.verbose) Module.arguments.unshift('-v')

  function createProjectFile(filename) {
    console.log('INPUT', filename, Module.files[filename].slice(0, 100))
    FS.writeFile(
      '/' + filename,
      Module.files[filename],
      { encoding: 'binary' }
    )
  }

